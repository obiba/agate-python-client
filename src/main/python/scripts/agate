#! /usr/bin/env python
#
import argparse

import agate.rest
import agate.auth_management.application
import agate.auth_management.group
import agate.auth_management.user


def add_agate_arguments(parser):
    """
    Add Agate access arguments
    """
    parser.add_argument('--agate', '-ag', required=False, default='http://localhost:8081',
                        help='Agate server base url (default: http://localhost:8081)')
    parser.add_argument('--user', '-u', required=False, help='User name')
    parser.add_argument('--password', '-p', required=False, help='User password')
    parser.add_argument('--ssl-cert', '-sc', required=False, help='Certificate (public key) file')
    parser.add_argument('--ssl-key', '-sk', required=False, help='Private key file')
    parser.add_argument('--verbose', '-v', action='store_true', help='Verbose output')


def add_subcommand(name, help, add_args_func, default_func):
    """
    Make a sub-parser, add default arguments to it, add sub-command arguments and set the sub-command callback function.
    """
    subparser = subparsers.add_parser(name, help=help)
    add_agate_arguments(subparser)
    add_args_func(subparser)
    subparser.set_defaults(func=default_func)


# Parse arguments
parser = argparse.ArgumentParser(description='Agate command line.')
subparsers = parser.add_subparsers(title='sub-commands',
                                   help='Available sub-commands. Use --help option on the sub-command '
                                        'for more details.')

# Add subcommands
add_subcommand('rest', 'Request directly the Agate REST API, for advanced users.', agate.rest.add_arguments,
               agate.rest.do_command)
add_subcommand('add-user', 'Add a new user.',
               agate.auth_management.user.user_add_arguments, agate.auth_management.user.do_add_command)
add_subcommand('delete-user', 'Delete a user.',
               agate.auth_management.user.user_delete_arguments,
               agate.auth_management.user.do_delete_command)
add_subcommand('add-group', 'Add a new group.',
               agate.auth_management.group.group_add_arguments,
               agate.auth_management.group.do_add_command)
add_subcommand('delete-group', 'Delete a group (does NOT delete users of the group).',
               agate.auth_management.group.group_delete_arguments,
               agate.auth_management.group.do_delete_command)
add_subcommand('add-application', 'Add a new application.',
               agate.auth_management.application.application_add_arguments,
               agate.auth_management.application.do_add_command)
add_subcommand('delete-application',
               'Delete an application.',
               agate.auth_management.application.application_delete_arguments,
               agate.auth_management.application.do_delete_command)

# Execute selected command
args = parser.parse_args()
args.func(args)
